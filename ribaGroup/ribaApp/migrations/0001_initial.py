# Generated by Django 5.1.6 on 2025-02-05 19:22

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Имя заказчика"),
                ),
                (
                    "number",
                    models.CharField(max_length=15, verbose_name="Номер телефона"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Название услуги"),
                ),
                (
                    "description",
                    models.CharField(
                        max_length=500, verbose_name="Краткое описание для карточки"
                    ),
                ),
                (
                    "main_photo",
                    models.ImageField(
                        upload_to="", verbose_name="Главное фото карточки"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Work",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "place",
                    models.CharField(
                        max_length=100, verbose_name="Расположение объекта"
                    ),
                ),
                ("square", models.FloatField(verbose_name="Площадь")),
                ("cost_of_work", models.FloatField(verbose_name="Стоимость работ")),
                (
                    "cost_of_materials",
                    models.FloatField(verbose_name="Стоимость материалов"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Test",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("water_supply_sewage", models.BooleanField(default=False)),
                ("square", models.FloatField(verbose_name="Площадь")),
                (
                    "project",
                    models.CharField(
                        choices=[("yes", "Да"), ("no", "Нет")], max_length=3
                    ),
                ),
                (
                    "floors",
                    models.IntegerField(
                        choices=[
                            (1, "1 этаж"),
                            (2, "2 этажа"),
                            (3, "3 этажа"),
                            ("individual", "Индивидуальный"),
                        ]
                    ),
                ),
                (
                    "heating",
                    models.CharField(
                        choices=[
                            ("warm_floor", "Теплый пол"),
                            ("radiators", "Радиаторы"),
                            ("warm_floor_radiators", "Теплый пол + Радиаторы"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "boiler_type",
                    models.CharField(
                        choices=[
                            ("gas", "Газ"),
                            ("electric", "Электро"),
                            ("solid_fuel", "Твердотопливный"),
                            ("diesel", "Дизельный"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="tests",
                        to="ribaApp.customer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата и время создания заказа"
                    ),
                ),
                ("estimate", models.BooleanField(verbose_name="Сформирована смета?")),
                (
                    "contract",
                    models.BooleanField(verbose_name="Заключен договор по заказу?"),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="orders",
                        to="ribaApp.customer",
                    ),
                ),
                (
                    "test",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="orders",
                        to="ribaApp.test",
                    ),
                ),
            ],
        ),
    ]
